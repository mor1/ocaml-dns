# OASIS_START
# DO NOT EDIT (digest: b9485ad47b885d61bc4e66c82ceaba44)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library dns
"lib/dns.cmxs": use_dns
"lib/base64.cmx": for-pack(Dns)
"lib/hashcons.cmx": for-pack(Dns)
"lib/loader.cmx": for-pack(Dns)
"lib/name.cmx": for-pack(Dns)
"lib/operators.cmx": for-pack(Dns)
"lib/packet.cmx": for-pack(Dns)
"lib/query.cmx": for-pack(Dns)
"lib/RR.cmx": for-pack(Dns)
"lib/trie.cmx": for-pack(Dns)
"lib/zone.cmx": for-pack(Dns)
"lib/zone_lexer.cmx": for-pack(Dns)
"lib/zone_parser.cmx": for-pack(Dns)
<lib/*.ml{,i}>: pkg_re
<lib/*.ml{,i}>: pkg_re.str
<lib/*.ml{,i}>: pkg_cstruct
<lib/*.ml{,i}>: pkg_cstruct.syntax
# Library server_lwt_unix
"server/server_lwt_unix.cmxs": use_server_lwt_unix
<server/*.ml{,i}>: pkg_lwt
<server/*.ml{,i}>: pkg_lwt.unix
# Library server_lwt_mirage
"server/server_lwt_mirage.cmxs": use_server_lwt_mirage
<server/*.ml{,i}>: use_dns
<server/*.ml{,i}>: pkg_re
<server/*.ml{,i}>: pkg_re.str
<server/*.ml{,i}>: pkg_lwt.syntax
<server/*.ml{,i}>: pkg_cstruct
<server/*.ml{,i}>: pkg_cstruct.syntax
<server/*.ml{,i}>: pkg_mirage
<server/*.ml{,i}>: pkg_mirage-net
# Library resolver_lwt_unix
"resolver/resolver_lwt_unix.cmxs": use_resolver_lwt_unix
<resolver/*.ml{,i}>: pkg_lwt
<resolver/*.ml{,i}>: pkg_lwt.unix
# Library resolver_lwt_mirage
"resolver/resolver_lwt_mirage.cmxs": use_resolver_lwt_mirage
<resolver/*.ml{,i}>: use_dns
<resolver/*.ml{,i}>: pkg_re
<resolver/*.ml{,i}>: pkg_re.str
<resolver/*.ml{,i}>: pkg_lwt.syntax
<resolver/*.ml{,i}>: pkg_cstruct
<resolver/*.ml{,i}>: pkg_cstruct.syntax
<resolver/*.ml{,i}>: pkg_mirage
<resolver/*.ml{,i}>: pkg_mirage-net
# Executable lwt_unix_server
<bin/lwt_unix_server.{native,byte}>: use_server_lwt_unix
<bin/lwt_unix_server.{native,byte}>: use_dns
<bin/lwt_unix_server.{native,byte}>: pkg_lwt
<bin/lwt_unix_server.{native,byte}>: pkg_lwt.unix
<bin/lwt_unix_server.{native,byte}>: pkg_re
<bin/lwt_unix_server.{native,byte}>: pkg_re.str
<bin/lwt_unix_server.{native,byte}>: pkg_lwt.syntax
<bin/lwt_unix_server.{native,byte}>: pkg_cstruct
<bin/lwt_unix_server.{native,byte}>: pkg_cstruct.syntax
<bin/lwt_unix_server.{native,byte}>: custom
# Executable lwt_unix_time_server
<bin/lwt_unix_time_server.{native,byte}>: use_server_lwt_unix
<bin/lwt_unix_time_server.{native,byte}>: use_dns
<bin/lwt_unix_time_server.{native,byte}>: pkg_lwt
<bin/lwt_unix_time_server.{native,byte}>: pkg_lwt.unix
<bin/lwt_unix_time_server.{native,byte}>: pkg_re
<bin/lwt_unix_time_server.{native,byte}>: pkg_re.str
<bin/lwt_unix_time_server.{native,byte}>: pkg_lwt.syntax
<bin/lwt_unix_time_server.{native,byte}>: pkg_cstruct
<bin/lwt_unix_time_server.{native,byte}>: pkg_cstruct.syntax
<bin/*.ml{,i}>: use_server_lwt_unix
<bin/*.ml{,i}>: use_dns
<bin/*.ml{,i}>: pkg_lwt
<bin/*.ml{,i}>: pkg_lwt.unix
<bin/*.ml{,i}>: pkg_re
<bin/*.ml{,i}>: pkg_re.str
<bin/*.ml{,i}>: pkg_lwt.syntax
<bin/*.ml{,i}>: pkg_cstruct
<bin/*.ml{,i}>: pkg_cstruct.syntax
<bin/lwt_unix_time_server.{native,byte}>: custom
# OASIS_STOP
true: annot
<lib/*>: syntax_camlp4o
<lib/*>: pkg_lwt.syntax
<lwt/*>: syntax_camlp4o
<lwt/*>: pkg_lwt.syntax
<server/*>: syntax_camlp4o
<server/*>: pkg_lwt.syntax
<lib_test/*>: syntax_camlp4o
<lib_test/*>: pkg_lwt.syntax
<resolver/*>: syntax_camlp4o
<resolver/*>: pkg_lwt.syntax
<client/*>: syntax_camlp4o
<client/*>: pkg_lwt.syntax
